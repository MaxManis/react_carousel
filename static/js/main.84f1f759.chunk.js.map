{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","this","props","images","frameSize","className","style","width","itemWidth","overflow","transform","transition","animationDuration","map","image","index","src","alt","String","disabled","infinite","type","onClick","setState","length","Math","min","step","max","React","Component","App","value","onChange","event","Number","target","checked","name","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.84f1f759.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number,\n};\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n  };\n\n  render() {\n    const { images, frameSize } = this.props;\n\n    return (\n      <div className=\"Carousel-container\">\n        <div\n          className=\"Carousel\"\n          style={{\n            width: `${this.props.itemWidth * frameSize}px`,\n            overflow: 'hidden',\n          }}\n        >\n          <ul\n            className=\"Carousel__list\"\n            style={{\n              transform: `translateX(${this.state.position * this.props.itemWidth}px)`,\n              transition: `transform ${this.props.animationDuration}ms`,\n            }}\n          >\n            {images.map((image, index) => {\n              return (\n                <li key={image}>\n                  <img\n                    src={image}\n                    alt={String(index)}\n                    width={this.props.itemWidth}\n                  />\n                </li>\n              );\n            })}\n          </ul>\n\n        </div>\n        <button\n          className=\"button-prew button\"\n          disabled={!this.props.infinite && this.state.position === 0}\n          type=\"button\"\n          onClick={() => {\n            this.setState((state, props) => {\n              return props.infinite && state.position === 0\n                ? {\n                  position: -(this.props.images.length - props.frameSize),\n                }\n                : {\n                  position: Math.min((state.position + props.step), (0)),\n                };\n            });\n          }}\n        >\n          ⏪\n        </button>\n\n        <button\n          className=\"button-next button\"\n          disabled={\n            !this.props.infinite && this.state.position\n            === -(this.props.images.length - this.props.frameSize)\n          }\n          data-cy=\"next\"\n          type=\"button\"\n          onClick={() => {\n            this.setState((state, props) => {\n              return props.infinite && state.position\n              === -(this.props.images.length - props.frameSize)\n                ? { position: 0 }\n                : {\n                  position: Math.max(\n                    (state.position - props.step),\n                    -(this.props.images.length - props.frameSize),\n                  ),\n                };\n            });\n          }}\n        >\n          ⏩\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  step: number,\n  infinite: boolean,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    infinite: false,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1 data-cy=\"title\">Carousel with {this.state.images.length} images</h1>\n\n        <Carousel\n          images={this.state.images}\n          step={this.state.step}\n          frameSize={this.state.frameSize}\n          itemWidth={this.state.itemWidth}\n          animationDuration={this.state.animationDuration}\n          infinite={this.state.infinite}\n        />\n\n        <div className=\"inputs\">\n          <div className=\"current-info\">\n            <span className=\"current-info__title\">Current values:</span>\n\n            <ul className=\"current-info__list\">\n              <li>\n                Images:\n                {this.state.images.length}\n              </li>\n\n              <li>\n                Step:\n                {this.state.step}\n              </li>\n\n              <li>\n                Frame size:\n                {this.state.frameSize}\n              </li>\n\n              <li>\n                Item width:\n                {this.state.itemWidth}\n              </li>\n\n              <li>\n                Animation duration:\n                {this.state.animationDuration}\n              </li>\n            </ul>\n          </div>\n\n          <label>\n            Step:\n\n            <input\n              value={this.state.step}\n              type=\"number\"\n              onChange={(event) => {\n                if (typeof Number(event.target.value) === 'number') {\n                  if (Number(event.target.value) < this.state.images.length\n                    && Number(event.target.value) > 0) {\n                    this.setState({ step: Number(event.target.value) });\n                  }\n                }\n              }}\n            />\n          </label>\n\n          <label>\n            Infinite:\n\n            <input\n              type=\"checkbox\"\n              onChange={(event) => {\n                if (event.target.checked) {\n                  this.setState({ infinite: true });\n                } else {\n                  this.setState({ infinite: false });\n                }\n              }}\n            />\n          </label>\n\n          <label>\n            Size of slider (from 1 to\n            {this.state.images.length}\n            )\n\n            <input\n              name=\"frameSize\"\n              min=\"1\"\n              max={this.state.images.length}\n              value={this.state.frameSize}\n              type=\"range\"\n              onChange={(event) => {\n                if (typeof Number(event.target.value) === 'number') {\n                  this.setState({ frameSize: Number(event.target.value) });\n                }\n              }}\n            />\n          </label>\n\n          <label>\n            Size of items (from 50 to 200)\n\n            <input\n              name=\"itemWidth\"\n              min=\"50\"\n              max=\"200\"\n              value={this.state.itemWidth}\n              type=\"range\"\n              onChange={(event) => {\n                if (typeof Number(event.target.value) === 'number') {\n                  this.setState({ itemWidth: Number(event.target.value) });\n                }\n              }}\n            />\n          </label>\n\n          <label>\n            Animation duration (from 0.5s to 3s)\n\n            <input\n              name=\"frameSize\"\n              min=\"500\"\n              max=\"3000\"\n              step=\"100\"\n              value={this.state.animationDuration}\n              type=\"range\"\n              onChange={(event) => {\n                if (typeof Number(event.target.value) === 'number') {\n                  this.setState({\n                    animationDuration: Number(event.target.value),\n                  });\n                }\n              }}\n            />\n          </label>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n//\n"],"sourceRoot":""}